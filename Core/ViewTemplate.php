<?phpnamespace ovensia\pf\Core;require_once _DIRNAME.'/lib/phpbb3/template.php';class ViewTemplate extends ploopiView{    private $_strPath;    private $_strFile;    private $_objTemplate;    public function __construct($strFile)    {        parent::_construct($strFile);        $this->_getTemplate()->set_filenames(array('body' => $strFile));    }    protected function _getTemplate()    {        if ($this->_objTemplate instanceof template) return $this->_objTemplate;        else return $this->_objTemplate = new template($this->_strPath, ploopiFrontController::getInstance()->getConfig()->_CACHE_PATH);    }    public function render($arrVars)    {        ob_start();        $this->_objTemplate->display('body', true, false);        $strContent = ob_get_contents();        ob_end_clean();                return $strContent;    }    /*    public function setVar($mixedVar, $strName = null, $strPrefix = null)    {        if (is_array($mixedVar))        {            $arrValues = array();            foreach($mixedVar as $strKey => $mixedValue)            {                if (is_array($mixedValue) || is_object($mixedValue)) $this->setVar($mixedValue, $strName.'.'.strtolower($strKey));                else $arrValues[strtoupper((is_null($strPrefix) ? '' : $strPrefix).$strKey)] = $mixedValue;            }            if (!empty($arrValues))            {                if (is_null($strName)) $this->_objTemplate()->assign_vars($arrValues);                else $this->_objTemplate()->assign_block_vars($strName, $arrValues);            }        }        else        {            if (is_null($strName)) throw new Core\ploopiException('A single var need a name');            else $this->_objTemplate()->assign_var(strtoupper($strName), $mixedVar);        }    }    */}